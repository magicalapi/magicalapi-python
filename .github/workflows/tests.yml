# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: tests

on:
  - push
  - pull_request

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
   # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    # install dependencies using poetry (dev group)
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry tox tox-gh-actions

    # test with pytest
    - name: Test with tox
      run: |
        tox
    # uploadtests result
    # - name: Upload pytest test results
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: pytest-results-${{ matrix.python-version }}
    #     path: junit/test-results-${{ matrix.python-version }}.xml
    #   # Use always() to always run this step to publish test results when there are test failures
    #   # if: ${{ always() }}

